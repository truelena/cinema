package cinema

fun main() {
    println("Enter the number of rows:")
    val rows = readln().toInt()
    println("Enter the number of seats in each row:")
    val seats = readln().toInt()

    val zal: MutableList<MutableList<String>> = MutableList(rows) { MutableList(seats) {"S"} }
    var takenSeats = 0
    var percentage = 0.0
    var currentIncome = 0
    var totalSeats = rows * seats
    var totalIncome = if (totalSeats > 60) (rows / 2 * seats) * 10 + ((rows - (rows / 2)) * seats) * 8 else totalSeats * 10

    fun showSeats () {
        println("Cinema:\n  ${ MutableList(seats) { it + 1 }.joinToString(" ") }")
        for (i in zal.indices) println("${i + 1} ${zal[i].joinToString(" ")}")
    }

    fun buyTicket(): Boolean {
        println("Enter a row number:")
        val row = readln().toInt()
        println("Enter a seat number in that row:")
        val seat = readln().toInt()

        if (row - 1 < 0 || row > rows || seat - 1 < 0 || seat > seats) {
            println("Wrong input!")
            return false
        } else if (zal[row-1][seat-1] == "B") {
            println("That ticket has already been purchased!")
            return false
        }

        zal[row-1][seat-1] = "B"
        val ticketPrice = if (totalSeats > 60 && row > rows / 2) 8 else 10
        currentIncome += ticketPrice
        takenSeats++
        println("Ticket price: \$${ticketPrice}\n")
        return true
    }

    fun showStatistics() {
        percentage = (takenSeats.toDouble() / totalSeats.toDouble()) * 100
        println("Number of purchased tickets: ${takenSeats}")
        println("Percentage: ${"%.2f".format(percentage)}%")
        println("Current income: \$${currentIncome}")
        println("Total income: \$${totalIncome}")
    }

    while(true) {
        println("""
            1. Show the seats
            2. Buy a ticket
            3. Statistics
            0. Exit 
        """.trimIndent())

        when(readln().toInt()) {
            1 -> showSeats()
            2 -> while (true) if (buyTicket()) break
            3 -> showStatistics()
            0 -> break
        }
    }
}
